{"ast":null,"code":"var _jsxFileName = \"/Users/sadi/HDAI/HDAIUI/src/Components/PatientMedications.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PatientMedications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      items: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.SelectedPatientId !== this.props.SelectedPatientId) {\n      fetch(\"http://localhost:3002/Patients/Medications/\" + nextProps.SelectedPatientId, {\n        method: 'Get'\n      }).then(res => res.json()).then(result => {\n        this.setState({\n          items: result.Medications\n        });\n      }, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      style: {\n        width: \"250px\"\n      },\n      size: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(\"option\", {\n      value: item.medname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, item.medname, \" \", item.dose, \" \", item.startDate, \" \", item.stopDate))));\n  }\n\n}\n\nPatientMedications.popTypes = {\n  SelectedPatientId: PropTypes.string.isRequired\n};\nexport default PatientMedications;","map":{"version":3,"sources":["/Users/sadi/HDAI/HDAIUI/src/Components/PatientMedications.jsx"],"names":["React","Component","PropTypes","PatientMedications","constructor","props","state","error","items","componentWillReceiveProps","nextProps","SelectedPatientId","fetch","method","then","res","json","result","setState","Medications","render","width","map","item","medname","dose","startDate","stopDate","popTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,kBAAN,SAAiCF,SAAjC,CACA;AACIG,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,KAAK,EAAG;AAFC,KAAb;AAIH;;AAGDC,EAAAA,yBAAyB,CAACC,SAAD,EACzB;AACI,QAAKA,SAAS,CAACC,iBAAV,KAAgC,KAAKN,KAAL,CAAWM,iBAAhD,EACA;AACGC,MAAAA,KAAK,CAAC,gDAA+CF,SAAS,CAACC,iBAA1D,EAA4E;AAAEE,QAAAA,MAAM,EAAC;AAAT,OAA5E,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGMG,MAAD,IAAY;AACR,aAAKC,QAAL,CAAc;AACXV,UAAAA,KAAK,EAAGS,MAAM,CAACE;AADJ,SAAd;AAGH,OAPN,EAQMZ,KAAD,IAAW;AACP,aAAKW,QAAL,CAAc;AACVX,UAAAA,KAAK,EAAGA;AADE,SAAd;AAGH,OAZN;AAcF;AACJ;;AAGDa,EAAAA,MAAM,GACN;AACI,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAlB;AAAmC,MAAA,IAAI,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKf,KAAL,CAAWE,KAAX,CAAiBc,GAAjB,CAAqBC,IAAI,IACtB;AAAQ,MAAA,KAAK,EAAIA,IAAI,CAACC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSD,IAAI,CAACC,OADd,OACwBD,IAAI,CAACE,IAD7B,OACoCF,IAAI,CAACG,SADzC,OACqDH,IAAI,CAACI,QAD1D,CADH,CADT,CADA,CAFJ;AAYH;;AA/CL;;AAkDAxB,kBAAkB,CAACyB,QAAnB,GAA8B;AAC1BjB,EAAAA,iBAAiB,EAAET,SAAS,CAAC2B,MAAV,CAAiBC;AADV,CAA9B;AAIA,eAAe3B,kBAAf","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types';\n\nclass PatientMedications extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            error: null,\n            items : []\n        }\n    }\n\n    \n    componentWillReceiveProps(nextProps)\n    {\n        if ( nextProps.SelectedPatientId !== this.props.SelectedPatientId  )\n        {\n           fetch(\"http://localhost:3002/Patients/Medications/\"+ nextProps.SelectedPatientId,{ method:'Get'})\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                       items : result.Medications\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        error : error\n                    });\n                }\n            )\n        }\n    }\n    \n    \n    render()\n    {\n        return (\n           \n            <div >\n            <   select style={{width:\"250px\"}} size=\"10\" >\n                    {this.state.items.map(item => (\n                        <option value = {item.medname} >\n                                {item.medname} {item.dose} {item.startDate} {item.stopDate} \n                        </option>\n                    ))}\n                </select>\n            </div>\n        );\n    }\n\n}\nPatientMedications.popTypes = {\n    SelectedPatientId: PropTypes.string.isRequired\n}\n\nexport default PatientMedications;"]},"metadata":{},"sourceType":"module"}