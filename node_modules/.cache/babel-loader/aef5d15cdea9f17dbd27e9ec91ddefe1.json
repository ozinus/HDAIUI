{"ast":null,"code":"var _jsxFileName = \"/Users/sadi/HDAIUI/hdaiuiapp/src/Components/PatientMedications.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PatientMedications extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      items: [],\n      length: 0\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.SelectedPatientId !== this.props.SelectedPatientId) {\n      alert(nextProps.SelectedPatientId);\n    }\n  } // componentDidMount()\n  // {\n  //     fetch(\"http://localhost:3002/Patients/\",{ method:'Get'})\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 this.setState({\n  //                    items : result,\n  //                    isLoaded : true\n  //                 });\n  //             },\n  //             (error) => {\n  //                 this.setState({\n  //                     error : error\n  //                 });\n  //             }\n  //         )\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      style: {\n        width: \"150px\"\n      },\n      size: \"10\",\n      onChange: this.props.PatientSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(\"option\", {\n      key: item._id,\n      value: item._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, item.firstName, \" \", item.lastName))));\n  }\n\n}\n\nPatientMedications.popTypes = {\n  SelectedPatientId: PropTypes.string.isRequired\n};\nexport default PatientMedications;","map":{"version":3,"sources":["/Users/sadi/HDAIUI/hdaiuiapp/src/Components/PatientMedications.jsx"],"names":["React","Component","PropTypes","PatientMedications","constructor","props","state","error","items","length","componentWillReceiveProps","nextProps","SelectedPatientId","alert","render","width","PatientSelected","map","item","_id","firstName","lastName","popTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,kBAAN,SAAiCF,SAAjC,CACA;AACIG,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,KAAK,EAAG,EAFC;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EACzB;AACI,QAAKA,SAAS,CAACC,iBAAV,KAAgC,KAAKP,KAAL,CAAWO,iBAAhD,EACA;AACGC,MAAAA,KAAK,CAACF,SAAS,CAACC,iBAAX,CAAL;AACF;AACJ,GAjBL,CAmBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAE,EAAAA,MAAM,GACN;AACI,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAlB;AAAmC,MAAA,IAAI,EAAC,IAAxC;AAA6C,MAAA,QAAQ,EAAI,KAAKV,KAAL,CAAWW,eAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKV,KAAL,CAAWE,KAAX,CAAiBS,GAAjB,CAAqBC,IAAI,IACtB;AAAQ,MAAA,GAAG,EAAIA,IAAI,CAACC,GAApB;AAAyB,MAAA,KAAK,EAAID,IAAI,CAACC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSD,IAAI,CAACE,SADd,OAC0BF,IAAI,CAACG,QAD/B,CADH,CADT,CADA,CAFJ;AAYH;;AApDL;;AAuDAlB,kBAAkB,CAACmB,QAAnB,GAA8B;AAC1BV,EAAAA,iBAAiB,EAAEV,SAAS,CAACqB,MAAV,CAAiBC;AADV,CAA9B;AAIA,eAAerB,kBAAf","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types';\n\nclass PatientMedications extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            error: null,\n            items : [],\n            length: 0\n        }\n    }\n\n    componentWillReceiveProps(nextProps)\n    {\n        if ( nextProps.SelectedPatientId !== this.props.SelectedPatientId  )\n        {\n           alert(nextProps.SelectedPatientId);\n        }\n    }\n    \n    // componentDidMount()\n    // {\n    //     fetch(\"http://localhost:3002/Patients/\",{ method:'Get'})\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 this.setState({\n    //                    items : result,\n    //                    isLoaded : true\n    //                 });\n    //             },\n    //             (error) => {\n    //                 this.setState({\n    //                     error : error\n    //                 });\n    //             }\n    //         )\n    // }\n\n    render()\n    {\n        return (\n           \n            <div >\n            <   select style={{width:\"150px\"}} size=\"10\" onChange = {this.props.PatientSelected} >\n                    {this.state.items.map(item => (\n                        <option key = {item._id} value = {item._id}>\n                                {item.firstName} {item.lastName}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        );\n    }\n\n}\nPatientMedications.popTypes = {\n    SelectedPatientId: PropTypes.string.isRequired\n}\n\nexport default PatientMedications;"]},"metadata":{},"sourceType":"module"}